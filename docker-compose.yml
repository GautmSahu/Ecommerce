version: '3.8'

services:
  db:
    image: postgres:15
    container_name: ecommerce_db
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_PASSWORD: secret  # Set a strong password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sh:/docker-entrypoint-initdb.d/init-db.sh  # Run the script at container startup
    networks:
      - ecom_network

  web:
    build: .
    container_name: ecommerce_web
    restart: unless-stopped
    depends_on:
      - db
    env_file: .env
    environment:
      - DEBUG=0
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    networks:
      - ecom_network
    expose:
      - "8000"
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn --bind 0.0.0.0:8000 EcomProject.wsgi:application --workers=3 --threads=2 --timeout=120"
  
  nginx:
    image: nginx:latest
    container_name: nginx_server
    restart: unless-stopped
    ports:
      - "80:80"
      - "8000:8000"
    depends_on:
      - web
    networks:
      - ecom_network
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_volume:/app/static
      - media_volume:/app/media
      - ./nginx_logs:/var/log/nginx

networks:
  ecom_network:
    driver: bridge

volumes:
  postgres_data:
  static_volume:
  media_volume:
